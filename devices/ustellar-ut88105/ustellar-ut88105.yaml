substitutions:
  # default name is used as base for MAC suffix unique name generated by ESPHome
  name: "ustellar-ut88105"
  friendly_name: "Ustellar Smart Security Light"
  motion_off_delay: 60s

esphome:
  project:
    name: broccoliboy.ustellar-ut88105
    version: "1.0"
  on_boot:
    priority: 600
    then:
      # set default brightness to 50%
      - lambda: |-
          id(cwww_light).remote_values.set_brightness(0.5);

packages:
  hardware: !include ../../hardware/wb3s.yaml
  base: !include ../../common/base.yaml

status_led:
  pin: P14

output:
  - platform: libretiny_pwm
    id: warm_white_pwm_output
    pin: P8
  - platform: libretiny_pwm
    id: cool_white_pwm_output
    pin: P9
  
  # PWM output to control PIR sensitivity. Not used here but reserved for future use.
  - platform: libretiny_pwm
    id: motion_distance_pwm_output
    pin: P26
    max_power: 0.16

light:
  - platform: cwww
    id: cwww_light
    name: "Light"
    warm_white: warm_white_pwm_output
    cold_white: cool_white_pwm_output
    warm_white_color_temperature: 2700 K
    cold_white_color_temperature: 6500 K
    gamma_correct: 1.0
    constant_brightness: true

  # used for testing ww/cw linearity
  # - platform: monochromatic
  #   name: "Warm Light"
  #   output: warm_white_pwm_output
  #   default_transition_length: 0s
  #   gamma_correct: 1
  # - platform: monochromatic
  #   name: "Cool Light"
  #   output: cool_white_pwm_output
  #   default_transition_length: 0s
  #   gamma_correct: 1

# Light sensor (dark > 3.0V)
sensor:
  - platform: adc
    id: light_sensor
    pin: P23
    name: "Light Sensor"
    update_interval: 60s

# Dummy switch to control manual mode operation
switch:
  - platform: template
    id: manual_mode_switch
    name: "Manual Mode"
    optimistic: true

binary_sensor:
  - platform: gpio
    id: pir_binary_sensor
    pin: P6
    name: "PIR"
    device_class: moving
    on_press:
      then:
        binary_sensor.template.publish:
          id: motion_binary_sensor
          state: ON
    on_release:
      then:
        binary_sensor.template.publish:
          id: motion_binary_sensor
          state: OFF
  - platform: template
    id: motion_binary_sensor
    name: "Motion"
    device_class: motion
    filters:
      - delayed_off: ${motion_off_delay}
    on_press:
      if:
        condition:
          and:
            - sensor.in_range:
                id: light_sensor
                above: 3.0
            - switch.is_off: manual_mode_switch
        then:
          - light.turn_on: cwww_light
    on_release:
      if:
        condition:
          switch.is_off: manual_mode_switch
        then:
          - light.turn_off: cwww_light

# reset light and manual mode switch at midnight every night (in case it was mistakenly left on)
time:
  - platform: ${time_platform}
    on_time:
      - seconds: 0
        minutes: 0
        hours: 0
        then:
          - switch.turn_off: manual_mode_switch
          - light.turn_off: cwww_light
